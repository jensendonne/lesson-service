<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="app.lesson.lesnsrvc.dao.LoginedUserMapper">
  <resultMap id="BaseResultMap" type="app.lesson.lesnsrvc.model.LoginedUser">
    <id column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="session_key" jdbcType="VARCHAR" property="sessionKey" />
    <result column="login_state" jdbcType="VARCHAR" property="loginState" />
    <result column="role" jdbcType="INTEGER" property="role" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    openid, session_key, login_state, role, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from logined_user
    where openid = #{openid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from logined_user
    where openid = #{openid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="app.lesson.lesnsrvc.model.LoginedUser">
    insert into logined_user (openid, session_key, login_state, 
      role, create_time, update_time
      )
    values (#{openid,jdbcType=VARCHAR}, #{sessionKey,jdbcType=VARCHAR}, #{loginState,jdbcType=VARCHAR}, 
      #{role,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="app.lesson.lesnsrvc.model.LoginedUser">
    insert into logined_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="openid != null">
        openid,
      </if>
      <if test="sessionKey != null">
        session_key,
      </if>
      <if test="loginState != null">
        login_state,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="sessionKey != null">
        #{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="loginState != null">
        #{loginState,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="app.lesson.lesnsrvc.model.LoginedUser">
    update logined_user
    <set>
      <if test="sessionKey != null">
        session_key = #{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="loginState != null">
        login_state = #{loginState,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where openid = #{openid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="app.lesson.lesnsrvc.model.LoginedUser">
    update logined_user
    set session_key = #{sessionKey,jdbcType=VARCHAR},
      login_state = #{loginState,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where openid = #{openid,jdbcType=VARCHAR}
  </update>
  <select id="selectByLoginState" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from logined_user
    where login_state = #{loginState,jdbcType=VARCHAR}
  </select>
</mapper>